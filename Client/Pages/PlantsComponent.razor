@page "/plants"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Plantsy.Shared
@attribute [Authorize]
@inject HttpClient Http


<h2>Plants</h2>

@if (plants == null)
{
	<MudTable Items="@plants" Hover="true" Breakpoint="Breakpoint.Sm" Loading=true LoadingProgressColor="Color.Info">
		<HeaderContent>
			<MudTh>Date</MudTh>
			<MudTh>Temp. (C)</MudTh>
			<MudTh>Temp. (F)</MudTh>
			<MudTh>Summary</MudTh>
		</HeaderContent>
	</MudTable>
}
else
{
	<MudTable Items="@plants" Hover="true" Breakpoint="Breakpoint.Sm" Loading=false LoadingProgressColor="Color.Info">
		<HeaderContent>
			<MudTh>Plant Name</MudTh>
			<MudTh>Plant Type</MudTh>
			<MudTh>Last Watered</MudTh>
			<MudTh>Info</MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Date">@context.PlantName</MudTd>
			<MudTd DataLabel="temp-c">@context.PlantType</MudTd>
			<MudTd DataLabel="temp-f">@context.WaterLog.OrderByDescending(x => x.WaterDate).FirstOrDefault()?.WaterDate.DateTime</MudTd>
			<MudTd DataLabel="summary" HideSmall="_hidePosition">@context.Info</MudTd>
		</RowTemplate>
	</MudTable>

	<MudSwitch @bind-Checked="_hidePosition">Hide <b>position</b> when Breakpoint=Xs</MudSwitch>
	<MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>
}

@code {
	private List<Plant> plants;
	private List<Water> water;
	private bool _hidePosition;
	private bool _loading;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			plants = await Http.GetFromJsonAsync<List<Plant>>("plants");
			water = plants.FirstOrDefault().WaterLog;
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}

}
