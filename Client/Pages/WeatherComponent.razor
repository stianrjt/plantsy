@page "/weather"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Plantsy.Shared
@attribute [Authorize]
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<MudTable Items="@forecasts.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
		<HeaderContent>
			<MudTh>Date</MudTh>
			<MudTh>Temp. (C)</MudTh>
			<MudTh>Temp. (F)</MudTh>
			<MudTh>Summary</MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
			<MudTd DataLabel="temp-c">@context.TemperatureC</MudTd>
			<MudTd DataLabel="temp-f">@context.TemperatureF</MudTd>
			<MudTd DataLabel="summary" HideSmall="_hidePosition">@context.Summary</MudTd>
		</RowTemplate>
	</MudTable>

	<MudSwitch @bind-Checked="_hidePosition">Hide <b>position</b> when Breakpoint=Xs</MudSwitch>
	<MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>
}

@code {
	private WeatherForecast[] forecasts;
	private bool _hidePosition;
	private bool _loading;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}

}